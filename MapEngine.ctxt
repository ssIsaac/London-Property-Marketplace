#BlueJ class context
comment0.target=MapEngine
comment0.text=\r\n\ MapEngine\ processes\ all\ functionalities\ of\ the\ map\r\n\ panel\ underneath\ the\ GUI.\r\n\r\n\ @author\ Max\ Chang\r\n\ @version\ 26.03.2022\r\n
comment1.params=allListings\ pricedListings\ highStreets
comment1.target=MapEngine(java.util.ArrayList,\ java.util.ArrayList,\ java.util.ArrayList)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ MapEngine.\r\n
comment10.params=listings\ sortBy
comment10.target=java.util.List\ mergeSortAsc(java.util.List,\ java.lang.String)
comment10.text=\r\n\ A\ merge\ sort\ algorithm\ to\ sort\ a\ list\ of\ AirbnbListings\r\n\ \r\n\ @param\ listings\ A\ list\ of\ AirbnbListings.\r\n\ @param\ sortBy\ The\ parameter\ to\ sort\ the\ list\ by\ ("Price",\ "Review",\ "MinNight",\ "Name").\r\n\ @return\ A\ list\ of\ sorted\ AirbnbListings.\r\n\r\n
comment11.params=
comment11.target=java.util.List\ getHighStreet()
comment11.text=\r\n\ Getter\ for\ list\ of\ all\ high\ streets.\r\n
comment12.params=leftSortList\ rightSortList\ sortBy
comment12.target=java.util.List\ merge(java.util.List,\ java.util.List,\ java.lang.String)
comment12.text=\r\n\ Merges\ the\ AirbnbListings\ in\ ascending\ order\ (a-z,\ 0-9)\r\n\ \r\n\ @param\ leftSortList\ The\ left\ half\ of\ the\ list\ to\ be\ sorted.\r\n\ @param\ rightSortList\ The\ right\ half\ of\ the\ list\ to\ be\ sorted.\r\n\ @param\ sortBy\ The\ parameter\ to\ sort\ the\ list\ by.\r\n\ \r\n\ @return\ A\ part\ of\ a\ sorted\ list\ of\ AirbnbListings.\r\n
comment2.params=
comment2.target=java.util.ArrayList\ getList()
comment2.text=\r\n\ Get\ all\ listings.\r\n\ @return\ ArrayList\ of\ all\ listings.\r\n
comment3.params=newPricedListings
comment3.target=void\ setPricedListings(java.util.ArrayList)
comment3.text=\r\n\ Sets\ new\ priced\ listings\ with\ a\ different\ price\ quota.\r\n\ @param\ newPricedListings\ The\ new\ priced\ listing.\r\n
comment4.params=borough
comment4.target=java.util.ArrayList\ propertiesInBoroughList(java.lang.String)
comment4.text=\r\n\ Generates\ a\ list\ of\ the\ properties\ within\ a\ specified\ borough,\r\n\ it\ use\ the\ list\ of\ all\ properties\ if\ a\ price\ range\ is\ not\ selected.\r\n\ \r\n\ @param\ borough\ The\ name\ of\ the\ borough\ selected.\r\n\ @return\ A\ list\ of\ all\ the\ AirbnbListings\ within\ that\ borough.\r\n
comment5.params=borough\ listings
comment5.target=java.util.ArrayList\ boroughListFilter(java.lang.String,\ java.util.ArrayList)
comment5.text=\r\n\ Filters\ out\ listings\ according\ to\ its\ neighbourhood\ name.\r\n\ \r\n\ @param\ borough\ The\ name\ of\ the\ borough\ selected.\r\n\ @param\ listings\ The\ list\ to\ filter\ from.\r\n\ @return\ A\ list\ of\ all\ the\ AirbnbListings\ within\ that\ borough.\r\n
comment6.params=borough
comment6.target=int\ boroughListCount(java.lang.String)
comment6.text=\r\n\ Counts\ the\ number\ of\ listings\ in\ a\ given\ borough.\r\n\ @param\ borough\ The\ name\ of\ the\ borough.\r\n\ @return\ The\ number\ of\ listings.\r\n
comment7.params=
comment7.target=int\ biggestBorough()
comment7.text=\r\n\ Returns\ the\ borough\ with\ the\ most\ listings.\r\n\ @return\ The\ number\ of\ listings\ in\ the\ biggest\ borough.\r\n
comment8.params=borough
comment8.target=int\ propertiesInBoroughInt(java.lang.String)
comment8.text=\r\n\ A\ count\ of\ all\ the\ properties\ within\ a\ borrow.\r\n\ \r\n\ @param\ borough\ The\ name\ of\ the\ borough\ selected.\r\n\ @return\ The\ number\ of\ properties\ in\ that\ borough.\r\n
comment9.params=borough
comment9.target=AirbnbListing\ getHighStreetListing(java.lang.String)
comment9.text=\r\n\ Return\ a\ particular\ AirbnbListing.\r\n\ \r\n\ @param\ index\ The\ index\ of\ the\ listing\ in\ the\ list.\r\n\ @param\ listing\ The\ listing\ to\ select\ from.\r\n\ \r\n\ @return\ The\ AirbnbListing\ specified.\r\n
numComments=13
